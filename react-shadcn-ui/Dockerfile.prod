# Multi-stage build for production
FROM node:20-alpine as build


# Accept API base URL and token metadata at build time so Vite can bake them into the bundle
ARG VITE_API_URL
ARG VITE_ACCESS_TOKEN_TTL_MINUTES
ARG VITE_REFRESH_TOKEN_TTL_DAYS

ENV VITE_API_URL=${VITE_API_URL}
ENV VITE_ACCESS_TOKEN_TTL_MINUTES=${VITE_ACCESS_TOKEN_TTL_MINUTES}
ENV VITE_REFRESH_TOKEN_TTL_DAYS=${VITE_REFRESH_TOKEN_TTL_DAYS}

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install dependencies
RUN npm ci

# Copy source code
COPY . .

# Persist provided environment variables into a .env file consumed by Vite's build
RUN rm -f .env && touch .env \
	&& { [ -n "$VITE_API_URL" ] && echo "VITE_API_URL=$VITE_API_URL" >> .env; } \
	&& { [ -n "$VITE_ACCESS_TOKEN_TTL_MINUTES" ] && echo "VITE_ACCESS_TOKEN_TTL_MINUTES=$VITE_ACCESS_TOKEN_TTL_MINUTES" >> .env; } \
	&& { [ -n "$VITE_REFRESH_TOKEN_TTL_DAYS" ] && echo "VITE_REFRESH_TOKEN_TTL_DAYS=$VITE_REFRESH_TOKEN_TTL_DAYS" >> .env; }

# Build the application
RUN npm run build

# Production stage with nginx
FROM nginx:alpine

# Copy built assets from build stage
COPY --from=build /app/dist /usr/share/nginx/html

# Copy nginx configuration
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Expose port
EXPOSE 3000

# Start nginx
CMD ["nginx", "-g", "daemon off;"]