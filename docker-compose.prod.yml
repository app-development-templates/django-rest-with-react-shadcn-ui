# Environment variables template
# Copy this file to .env and fill in the actual values before deploying with Dokploy
# DB_NAME: Name of the PostgreSQL database
# DB_USER: PostgreSQL database user
# DB_PASSWORD: Password for the PostgreSQL database user
#
#
# Frontend
# VITE_API_URL: URL of the backend API (e.g., https://backend.presentationlab.org)

services:
  # PostgreSQL Database
  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
    # Remove fixed port mapping for production deployment
    # ports:
    #   - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Django Backend API
  backend:
    build:
      context: ./django-rest-api
      dockerfile: Dockerfile
    restart: unless-stopped
    # Use expose instead of ports for Dokploy compatibility
    expose:
      - "8000"
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python wait-for-db.py &&
             python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py create_default_superuser &&
             python manage.py runserver 0.0.0.0:8000"
    networks:
      - app-network
    labels:
      - "dokploy.main-service=backend"
      # Traefik labels for production routing
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`backend.presentationlab.org`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  # React Frontend
  frontend:
    build:
      context: ./react-shadcn-ui
      dockerfile: Dockerfile.prod
      args:
        - VITE_API_URL=https://${VITE_API_URL}
    restart: unless-stopped
    # Use expose instead of ports for Dokploy compatibility
    expose:
      - "3000"
    depends_on:
      - backend
    networks:
      - app-network
    labels:
      - "dokploy.frontend=true"
      # Traefik labels for production routing
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`frontend.presentationlab.org`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
